{"version":3,"sources":["components/Launcher.js","components/Patient.js","components/Home.js","index.js","components/App.js"],"names":["Launcher","FHIR","oauth2","authorize","client_id","redirect_uri","scope","join","then","client","console","log","React","Component","PatientName","name","entry","find","nameRecord","use","given","family","PatientBanner","patient","gender","birthDate","Patient","props","state","loading","error","ready","request","patients","getFhirRelease","read","this","setState","Page","ReactDOM","render","path","component","Home","exact","document","getElementById"],"mappings":"yPAYqBA,E,4LAOjBC,IAAKC,OAAOC,UAAU,CACpBC,UAAW,uCACXC,aAAc,QACdC,MAAO,CACL,eACAC,KAAK,OACNC,MAAK,SAAAC,GACNC,QAAQC,IAAIF,Q,+BAOd,MAAO,mB,GArB2BG,IAAMC,W,wBCT5C,SAASC,EAAT,GAAqC,IAAD,IAAbC,YAAa,MAAN,GAAM,EAC9BC,EACFD,EAAKE,MAAK,SAAAC,GAAU,MAAuB,aAAnBA,EAAWC,QAAuBJ,EAAK,GACjE,OAAKC,EAGE,4BAAKA,EAAMI,MAAMb,KAAK,KAAO,IAAMS,EAAMK,QAFvC,uCAKX,SAASC,EAAcC,GACrB,OACE,6BACE,kBAACT,EAAD,CAAaC,KAAMQ,EAAQR,OAC3B,yCACU,2BAAIQ,EAAQC,QADtB,IACmC,KAEnC,sCACO,2BAAID,EAAQE,a,IAMJC,E,YACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,SAAS,EACTN,QAAS,KACTO,MAAO,MALQ,E,qNASI7B,IAAKC,OAAO6B,Q,cAA3BtB,E,gBACiBA,EAAOuB,QAAQ,W,cAAhCC,E,gBACgBxB,EAAOyB,iB,qBAC7BxB,QAAQC,IAAIsB,G,UACUxB,EAAOc,QAAQY,O,QAA/BZ,E,OACNa,KAAKC,SAAS,CAAEd,UAASM,SAAS,EAAOC,MAAO,O,sIAWxC,IAAD,EAC6BM,KAAKR,MAAjBL,GADjB,EACCO,MADD,EACQD,QADR,EACiBN,SACxB,OAAO,kBAACD,EAAkBC,O,GA5BOX,IAAMC,WCnB5B,SAASyB,IACpB,OACI,kBAAC,EAAD,MCLRC,IAASC,OAAO,mBCCD,WACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,OAAOC,UAAWC,IAC9B,kBAAC,IAAD,CAAOF,KAAK,IAAIC,UAAW1C,EAAU4C,OAAK,ODLtC,MAASC,SAASC,eAAe,W","file":"static/js/main.0b45cd8c.chunk.js","sourcesContent":["import React from \"react\";\nimport FHIR from \"fhirclient\";\n\n/**\n * Typically the launch page is an empty page with a `SMART.authorize`\n * call in it.\n *\n * This example demonstrates that the call to authorize can be postponed\n * and called manually. In this case we use ReactRouter which will match\n * the `/launch` path and render our component. Then, after our page is\n * rendered we start the auth flow.\n */\nexport default class Launcher extends React.Component {\n  /**\n   * This is configured to make a Standalone Launch, just in case it\n   * is loaded directly. An EHR can still launch it by passing `iss`\n   * and `launch` url parameters\n   */\n  componentDidMount() {\n    FHIR.oauth2.authorize({\n      client_id: \"cbd26b18-7c13-4db8-8d9f-6793d199c5ab\",\n      redirect_uri: './app',\n      scope: [\n        \"patient/*.*\"    // Read patient data\n      ].join(\" \")\n    }).then(client => {\n      console.log(client)\n    })\n  }\n  /**\n   * Could also return `null` for empty page\n   */\n  render() {\n    return \"Launching...\";\n  }\n}\n","import React from \"react\";\nimport FHIR from \"fhirclient\";\n\nfunction PatientName({ name = [] }) {\n  let entry =\n    name.find(nameRecord => nameRecord.use === \"official\") || name[0];\n  if (!entry) {\n    return <h1>No Name</h1>;\n  }\n  return <h1>{entry.given.join(\" \") + \" \" + entry.family}</h1>;\n}\n\nfunction PatientBanner(patient) {\n  return (\n    <div>\n      <PatientName name={patient.name} />\n      <span>\n        Gender: <b>{patient.gender}</b>,{\" \"}\n      </span>\n      <span>\n        DOB: <b>{patient.birthDate}</b>\n      </span>\n    </div>\n  )\n}\n\nexport default class Patient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      patient: null,\n      error: null\n    };\n  }\n  async componentDidMount() {\n    const client = await FHIR.oauth2.ready()\n    const patients = await client.request(\"Patient\")\n    const release = await client.getFhirRelease()\n    console.log(patients)\n    const patient = await client.patient.read()\n    this.setState({ patient, loading: false, error: null });\n    // client => {\n    //   client.patient.read()\n    //     .then(patient => {\n    //       this.setState({ patient, loading: false, error: null });\n    //     })\n    //     .catch(error => {\n    //       this.setState({ error, loading: false });\n    //     })\n    // })\n  }\n  render() {\n    const { error, loading, patient } = this.state\n    return <PatientBanner {...patient} />\n  }\n}\n","import React from \"react\";\nimport Patient from \"./Patient\";\n\n/**\n * Wraps everything into `FhirClientProvider` so that any component\n * can have access to the fhir client through the context.\n */\nexport default function Page() {\n    return (\n        <Patient />\n    )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Launcher from \"./Launcher\";\nimport Home from \"./Home\";\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <Route path=\"/app\" component={Home} />\n            <Route path=\"/\" component={Launcher} exact />\n        </BrowserRouter>\n    );\n}\n"],"sourceRoot":""}